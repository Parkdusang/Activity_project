package com.example.parkdusang.activity_project;

/**
 * Created by parkdusang on 2017. 2. 19..
 */

public class MultiLayer {

    private double W1[][] = {{  7.69153088e-02 , -4.02065992e-01  , 9.58898067e-01 ,  7.63380289e-01, -2.84434974e-01,   1.11161716e-01,  -5.85914493e-01 ,  8.03437948e-01, -2.31693506e-01,   1.29214990e+00,  -1.46816134e+00 , -2.45316684e-01, -3.17389041e-01,   5.31260967e-01},
    {  2.44276337e-02,   3.95396799e-01,  -3.95878553e-01, -6.29167676e-01, 3.08872364e-03,   5.88361442e-01,   5.56639314e-01 , -2.25061417e-01, -4.48932350e-01,  -4.50455844e-01,  -1.21062525e-01 ,  5.67989657e-03, 3.53854269e-01,  -7.85157531e-02},
    { -2.36858502e-02,   4.57744628e-01,   2.86300182e-01 , -7.44212985e-01, -6.76945865e-01,   1.43552884e-01,   7.27882981e-02 ,  4.14902717e-01, 8.93936872e-01,  -9.90209207e-02,  -4.87459172e-03 ,  3.84523124e-01, 5.69524825e-01,   7.23861635e-01},
    { -1.10631561e+00,  -1.63686109e+00,   1.93439275e-01  , 2.60034370e+00, -1.12678349e+00,  -4.21660781e-01,  -8.30172062e-01  , 3.38315099e-01, -1.27195489e+00,   1.16552103e+00,   2.16642648e-01  , 3.17127556e-01, 2.34716788e-01,  -3.99956942e-01},
    { -2.15914226e+00,  -3.42313528e-01,  -9.53307748e-02  , 7.42223382e-01, 1.46225476e+00,  -5.80344396e-03,  -4.29278374e-01 , -1.57870367e-01, -2.67010629e-02,  -7.54139498e-02,   9.33395997e-02 ,  6.79658294e-01, 4.34233695e-01,   1.53682232e+00},
    { -2.72260588e-02,  -4.46012527e-01,  -1.68379709e-01  , 6.54361248e-01, -5.45068264e-01,  -1.08392484e-01,  -2.59173125e-01 , -1.36812940e-01, -4.81401980e-02,   4.41366225e-01,  -3.39160301e-03 , -5.51465563e-02, -7.77908564e-02,   3.93184841e-01},
    { -1.94667911e-04,   1.04084142e-01,   7.07741529e-02 , -3.42671484e-01, 5.82721606e-02,   1.13193714e-03,   1.41237319e-01 ,  2.27009095e-02, 1.03113139e-02,  -5.74424446e-01,  -1.39654744e-02 ,  2.99573317e-02, 3.21494937e-02,  -5.00185072e-01}};
    private double W2[][] = {{  1.08270752e+00,  -5.37043333e+00,   1.68975270e+00,  -8.19855332e-02, -2.77176388e-02,  -2.15242848e-01,   1.57424778e-01,   2.95721769e-01, 2.47513264e-01,   9.14039910e-01,   1.45732987e+00,   4.99443144e-01, 7.21177459e-01,   2.80203849e-01},
            { -1.75941676e-01,  -5.97183526e-01,  -3.59968282e-03,  -4.59865749e-01, 6.33700669e-01,  -5.48802257e-01,  -9.60865796e-01,   3.12984139e-01, 7.87352920e-02,  -8.02871138e-02,  -1.35676647e-02,   5.49466729e-01, -3.78069580e-01,   3.42410356e-01},
            {  3.93883079e-01,   1.77138913e+00,   6.02917314e-01,  -3.46608967e-01, -3.08503121e-01,   4.45662528e-01,   1.76631764e-01,  -3.72172028e-01, -8.99668813e-01,   1.13289618e+00,   3.72206032e-01,  -4.42835763e-02, -6.72440469e-01,   5.10337412e-01},
            {  3.81115705e-01,   3.45497578e-01,  -2.12687731e-01,  -4.32261497e-01, 1.14043839e-01,  -4.16995466e-01,   3.24023485e-01,   8.90423000e-01, -1.41836512e+00,   2.76613295e-01,   6.42009974e-01,   6.94377720e-01, -7.92575538e-01,   4.68823612e-01},
            {  5.02724171e-01,  -4.50745523e-01,  -8.27380061e-01,   6.63898230e-01, 3.55124533e-01,   1.01281025e-01,   1.49390474e-01,   4.21427518e-01, -2.97435713e+00,  -3.37484479e-02,   1.05600655e+00,  -2.57835388e-01, 8.02417636e-01,   5.44900894e-02},
            { -3.42731774e-01,  -1.45825553e+00,   7.63022602e-01,   6.06168389e-01, -4.38643992e-01,   9.80939806e-01,   1.16074407e+00,   4.74140584e-01, -1.41645038e+00,  -1.00258434e+00,   3.03093344e-01,   7.16089129e-01, -5.49979806e-01,  -7.06458509e-01},
            { -4.34535921e-01,   1.84670195e-01,   3.41973275e-01,   5.34334898e-01, 1.39357537e-01,   8.94994617e-01,   6.57672882e-01,   2.28266597e-01, -7.81366900e-02,   1.81637943e-01,   1.75509185e-01,   3.02922815e-01, 2.61802107e-01,   4.28778142e-01},
            { -1.54503453e+00,  -1.76734698e+00,  -6.80517554e-01,  -8.52639258e-01, 7.28994906e-01,  -1.11977017e+00,   2.88472176e-01,   6.95684016e-01, 1.19023645e+00,  -1.81386828e+00,  -8.03100705e-01,  -2.22882438e+00, 1.53047073e+00,  -7.69493103e-01},
            { -4.19223219e-01,  -5.19037724e-01,   1.36394191e+00,  -2.63118539e-02, 7.60110378e-01,   1.05955493e+00,   3.65776539e-01,  -2.20750660e-01, 5.74335694e-01,   2.53682673e-01,  -6.96342111e-01,  -1.18259266e-01, -7.49365091e-01,   1.75509110e-01},
            {  2.51788329e-02,  -6.79774629e-03,   5.59351146e-01,  -1.06686926e+00, -5.67398012e-01,  -2.01758847e-01,   1.12028643e-01,  -7.05077231e-01, 8.15175399e-02,   3.33632171e-01,   6.20133519e-01,   5.30230887e-02, 2.03954309e-01,   8.09546769e-01},
            {  2.56582946e-01,   7.10224867e-01,   1.62612367e+00,   1.78856361e+00, -1.37503028e+00,  -7.29568601e-02,   2.35855430e-01,  -3.09403569e-01, -3.42124403e-01,   6.79386854e-01,  -2.33251616e-01,  -4.30866987e-01, -3.04735214e-01,   2.05322698e-01},
            {  1.71031654e-01,   3.94566432e-02,   1.86948385e-02,  -3.44002038e-01, 5.68195224e-01,  -2.69548982e-01,  -6.84489310e-01,  -2.41832405e-01, 6.16648555e-01,   7.09373593e-01,   1.52655572e-01,   7.12956935e-02, -6.37841463e-01,  -1.36501297e-01},
            {  6.37052774e-01,   9.75543618e-01,   2.29847264e-02 ,  5.03937483e-01, -4.35471833e-01,   2.48896137e-01,   9.39803243e-01 ,  4.69288349e-01, -3.77981514e-02,   6.71335459e-01,   1.02846456e+00 , -4.66691051e-03, 3.16766918e-01,   1.76518962e-01},
            { -1.26736850e-01,  -2.81613678e-01,  -1.16701186e-01 ,  3.95596355e-01, 3.23806465e-01,   4.75923538e-01,   1.76201537e-02 ,  1.66501909e-01, 5.53908765e-01,   3.35760713e-01,   9.93585363e-02 ,  2.60959536e-01, 7.54058361e-01,   3.25067461e-01}};



    private double W3[][] ={{  1.14291656e+00,  -2.02694893e+00,   7.53148198e-01,   7.54330531e-02, 1.35059619e+00,  -1.11991465e-01,  -1.43997526e+00,   5.89675605e-01, -1.39070183e-01,   1.69178391e+00,   3.76841038e-01,   6.58669829e-01, -1.55568898e-01,   3.20637152e-02},
            {  8.87800574e-01,  -4.07067508e-01,   2.15605426e+00,   4.35311794e-01, 2.24143788e-01,  -1.20050214e-01,   3.39076281e-01,  -6.73303747e+00, 9.67627823e-01,   2.33685398e+00,   1.68425286e+00,   1.83247781e+00, 3.18511319e+00,  -2.22192907e+00},
            { -7.02957511e-02,   3.38022500e-01,  -2.74540812e-01,  -2.54711360e-02, 4.31560159e-01,   6.02869391e-01,   5.38819134e-01,   5.60026348e-01, -2.45125130e-01,  -5.46081811e-02,  -1.63728893e-01,   3.02648723e-01, 4.57708985e-01,   6.80492282e-01},
            {  6.03874326e-01,  -1.12653531e-01,  -2.94909686e-01,   3.32256198e-01, 4.88641262e-01,  -7.02060089e-02,   2.22949728e-01,   7.46134222e-01, 2.67648697e-01,   3.45761478e-02,  -5.13534583e-02,   5.14542423e-02, 3.48902076e-01,   5.80284059e-01},
            {  2.22855397e-02,  -5.90242803e-01,   8.07718515e-01,  -3.57517838e-01, 2.59892996e-02,  -4.36637372e-01,  -1.30177990e-01,   7.29618013e-01, -1.02658617e+00,   1.76047742e-01,  -2.26903811e-01,   8.26003015e-01, -1.06614864e+00,  -4.66063827e-01},
            {  2.86626279e-01,   6.34704590e-01,  -3.95993501e-01,  -1.00405800e+00, -1.40591860e-01,  -6.19078159e-01,   6.50402725e-01,  -1.81612983e-01, -3.45347548e+00,  -4.88783807e-01,   1.06066406e+00,  -1.28936037e-01, 9.70372319e-01,  -1.80222586e-01},
            { -1.37906909e+00,   8.63955081e-01,  -2.16742086e+00,  -1.29861498e+00, -8.93237218e-02,   2.18184233e-01,  -1.61563683e+00,   1.27818871e+00, -4.37777430e-01,   1.32348835e+00,  -3.59325618e-01,   6.33502007e-01, 4.38414931e-01,  -7.16202736e-01},
            {  6.75606906e-01,   1.84805378e-01,  -4.72497493e-01,   1.73307106e-01, 1.17999807e-01,   5.86378634e-01,  -3.05625767e-01,   3.28292064e-02, -2.35813797e-01,  -2.88346916e-01,   4.71170336e-01,   1.20173192e+00, -7.75188506e-02,  -8.57971609e-01},
            {  8.26706946e-01,   1.08000469e+00,  -3.40290546e-01,   9.56293523e-01, -1.60045698e-02,   7.05967784e-01,  -1.30571461e+01,  -9.27133143e-01, 5.97122014e-01,  -3.19037527e-01,   3.60745490e-01,   3.73933613e-01, 1.63134837e+00,  -1.83098173e+00},
            {  1.53973609e-01,   1.80837009e-02,   2.92573988e-01,   2.01240450e-01, -7.48971641e-01,  -1.59285176e+00,  -1.22844136e+00,  -1.75470948e-01, 1.37971804e-01,   4.52752888e-01,  -2.20327854e-01,   6.94570601e-01, -5.18627763e-01,  -2.16863260e-01},
            {  5.38687944e-01,   1.32494330e+00,   1.12061486e-01,   8.44227448e-02, 2.42048427e-01,  -1.67573756e-03,   2.43388548e-01,   1.10819444e-01, 7.63734221e-01,  -3.62693757e-01,  -3.64393592e-01,  -9.13828313e-01, 5.96130610e-01,   1.09975660e+00},
            {  8.17735136e-01,  -3.03489685e-01,   1.08163960e-01,  -1.45100215e-02, -4.59722877e-01,   3.57990086e-01,   2.97234148e-01,  -4.46496494e-02, 2.77557969e-01,   3.23902249e-01,  -4.79421020e-01,  -8.75556469e-01, 1.05867326e-01,  -4.44138139e-01},
            {  1.07803380e+00,  -3.45574409e-01,  -4.01281565e-01,  -2.82207608e-01, 4.52989377e-02,  -2.72687916e-02,  -1.95257568e+00,  -2.81276375e-01, -4.54448372e-01,  -4.00581360e+00,   9.04551446e-01,  -2.22648799e-01, -2.10640170e-02,  -1.03011727e+00},
            { -1.55883834e-01,  -9.54981327e-01,   5.62826514e-01,   9.21523392e-01, 4.29893047e-01,   8.19752574e-01,  -7.23343611e-01,   4.01030600e-01, -4.03791487e-01,   5.10497451e-01,   4.15861130e-01,  -1.78776607e-01, 6.08849861e-02,   4.61794972e-01}};

    public double W4[][] ={{  1.42950594e-01,   6.13660038e-01,   7.72861362e-01,  -3.95001322e-01, -6.03165090e-01,  -1.27843082e-01,   7.98437119e-01,  -6.37447655e-01, 5.34682393e-01,  -4.85510439e-01,   1.37658924e-01,   1.48503378e-01, 6.22256994e-01,  -4.76600468e-01},
            { -2.03063464e+00,  -1.54262221e+00,  -1.02474141e+00,   2.50881851e-01, -2.92350858e-01,  -2.25505471e+00,  -1.51412990e-02,   4.82874751e-01, -3.38163942e-01,   6.57479584e-01,  -5.33340633e-01,  -1.99940026e-01, -1.50282711e-01,  -1.08802235e+00},
            {  1.38507175e+00,   1.19008467e-01,   4.34553437e-02,  -4.08597529e-01, -3.83637488e-01,  -1.42424345e+00,  -2.69098163e-01,   7.39663064e-01, -1.91690028e+00,   4.04037714e-01,  -2.64255852e-01,   7.03358293e-01, 3.67757648e-01,  -4.06720877e-01},
            {  6.28605723e-01,   1.35857141e+00,   3.25359821e-01,  -2.81345814e-01, -3.16969723e-01,   5.07472157e-01,  -2.06810623e-01,   1.83570981e+00, -1.41430807e+00,   1.52330923e+00,   2.81631678e-01,   9.35110867e-01, 9.59176645e-02,  -1.16940983e-01},
            {  6.89427257e-01,   6.11227334e-01,   3.21128011e-01,   6.27539903e-02, 1.39444590e-01,   3.07208389e-01,  -3.55533838e-01,  -1.52263254e-01, -6.09890521e-01,   1.78266972e-01,  -2.96488911e-01,  -6.64155543e-01, -2.39870414e-01,   5.00831120e-02},
            { -2.86513954e-01,   6.28560305e-01,   5.79006433e-01,  -4.61129621e-02, -2.91005708e-02,   3.69853020e-01,  -4.04434234e-01,   5.27343988e-01, 9.16496366e-02,  -2.81750131e+00,  -7.45445848e-01,   3.90058666e-01, -3.46192181e-01,   4.80902016e-01},
            { -9.80605558e-02,  -2.32859552e-01,  -3.88785034e-01,  -5.31859696e-02, 3.97815779e-02,  -3.92127484e-01,   2.01247048e+00,  -1.43572494e-01, -1.37035048e+00,  -4.59419489e+00,   1.91610026e+00,  -3.46990794e-01, 5.39327025e-01,   1.63078383e-01},
            {  9.02726948e-01,  -2.09980190e-01,   3.79288584e-01,  -4.03421104e-01, 1.26615489e+00,   1.30482346e-01,  -3.27212483e-01,  -1.31308758e+00, 5.22038102e-01,   4.36572403e-01,   3.19149613e-01,  -2.77532369e-01, -4.49613601e-01,   5.06186962e-01},
            { -1.94374812e+00,   3.03443575e+00,   2.41799307e+00,  -4.50207561e-01, -7.34448791e-01,   4.89997959e+00,  -2.71896482e-01,  -2.69256806e+00, 3.30971336e+00,   2.28974891e+00,   1.50493288e+00,   9.17676151e-01, -2.09502792e+00,  -2.27041459e+00},
            {  1.02423441e+00,   6.49626672e-01,   5.81881225e-01,   9.90396068e-02, 4.38510329e-01,  -4.62904572e-01,   4.27941740e-01,   7.90230706e-02, 3.08912992e-01,   2.52524883e-01,  -2.62967241e-03,   5.50161183e-01, 2.65477180e-01,   1.03008844e-01},
            {  3.04634047e+00,  -3.54648519e+00,  -1.43713248e+00,  -4.54054773e-02, 1.75402987e+00,   5.55437684e-01,  -2.14487815e+00,  -4.41700995e-01, -3.77027750e-01,   8.78469050e-01,   2.54032660e+00,   8.88019800e-01, -1.82839036e-01,  -2.22708058e+00},
            { -2.16983393e-01,   1.33206189e+00,  -7.24230051e-01,  -7.65969232e-02, -2.54016787e-01,   4.07222599e-01,  -2.45666599e+00,  -4.35828656e-01, -4.78757590e-01,  -1.76644146e-01,   5.45278251e-01,  -1.11667067e-02, -7.41537750e-01,   1.83341873e+00},
            { -7.46712506e-01,   1.29550052e+00,  -1.55046239e-01,  -4.98195142e-01, -1.99175984e-01,   2.01447472e-01,  -2.34403536e-01,  -2.96175163e-02, 2.53608108e-01,  -6.23550639e-02,  -7.41680384e-01,  -1.05240321e+00, -4.57524270e-01,   2.26028442e-01},
            {  7.41834104e-01,  -9.87579346e-01,  -7.25721240e-01,  -1.50803803e-02, -2.97543824e-01,  -5.64853668e-01,   6.56281114e-01,  -6.88993633e-01, -6.19907081e-01,  -5.16389310e-02,   5.64639509e-01,   7.88334236e-02, 1.66043603e+00,   8.82557154e-01}};


    private double W5[][] ={{-0.8709116 ,  1.13964438,  0.8582046 ,  1.0873487 },
            { 0.87433964, -2.41963267,  0.91884655,  1.94374561},
            {-0.00916744, -0.77522796,  0.46353525, -5.14734125},
            { 0.51169115,  0.2954444 ,  0.40478963,  0.18505524},
            {-2.19668245,  1.45181727,  0.45245147, -2.52711177},
            {-2.57732582,  0.16496772,  1.56822336,  2.61022902},
            {-0.14220312,  2.30214953, -0.26363513, -0.56956536},
            { 9.12023926,  0.74586987, -8.7390213 , -6.54679728},
            { 0.53108829,  2.61678863, -1.55938113, -3.94528389},
            {-6.56514597,  6.11169004, -2.39316988, -2.01230097},
            { 2.77607536, -4.21608591, -0.49783725,  2.44377136},
            { 2.00099802,  2.4112289 , -1.74006784, -4.41975117},
            { 0.97662938,  2.48733854, -1.78267705, -5.47265387},
            { 0.11426295,  1.05019414, -1.16226971, -0.63824582}};


    private double B1[] ={-0.17234844,  2.31586313,  1.57841218, -1.74383855,  0.62202781, -1.99221158, -1.61295855, -0.20365921,  2.44785166, -2.09830332, -1.15353584,  1.22373569, -1.74472427, -0.34013319};

    private double B2[] ={ 1.78679132,  0.25478241,  1.27088714,  1.00732243,  0.60099834, -2.33644509, -1.40389776,  0.26237711, -1.47636735,  0.18481095, -0.98998094,  0.85805595, -0.53671235,  0.59238881};

    private double B3[] ={ 0.42652515, -1.2904799 ,  1.03179657,  1.4704212 , -0.27794725,  1.54647732,  0.7358048 , -1.62568164, -0.42191347,  0.37957063, -0.4450888 , -1.66733468, -0.7585364 ,  0.63252664};

    private double B4[] ={ 0.57365912, -0.83356154,  1.93577802,  0.27993804,  0.14580797,  0.5406813 ,  1.43954217,  1.45752227, -0.37830767,  0.10165658, -2.91938519,  0.87793714, -0.85022336,  2.70570803};

    private double B5[] ={-0.14974983, -0.57640064, -1.09880781, -5.45591068};

    private double inputData[] = new double[14];
    private double resultData[] = new double[14];

    int index=0;
    public MultiLayer(){
        for(int i = 0 ; i < 7 ; i++) {
            for (int j = 0; j < 14; j++) {
                System.out.print(W1[i][j]+ " ");
            }
            System.out.println();
        }
        for(int i = 0 ; i < 14 ; i++) {
            for (int j = 0; j < 14; j++) {
                System.out.print(W2[i][j]+ " ");
            }
            System.out.println();
        }
        for(int i = 0 ; i < 14 ; i++) {
            for (int j = 0; j < 14; j++) {
                System.out.print(W3[i][j]+ " ");
            }
            System.out.println();
        }
        for(int i = 0 ; i < 14 ; i++) {
            for (int j = 0; j < 14; j++) {
                System.out.print(W4[i][j]+ " ");
            }
            System.out.println();
        }
        for(int i = 0 ; i < 14 ; i++) {
            for (int j = 0; j < 4; j++) {
                System.out.print(W5[i][j]+ " ");
            }
            System.out.println();
        }
    }
    public void changeData(){
        for(int i = 0 ; i < 14 ; i++){
            inputData[i] = resultData[i];
        }
    }

    public int checkState(String x, String y , String z , String gx ,String gy ,String gz ,double press){


        inputData[0] = Double.parseDouble(x);
        inputData[1] = Double.parseDouble(y);
        inputData[2] = Double.parseDouble(z);
        inputData[3] = Double.parseDouble(gx);
        inputData[4] = Double.parseDouble(gy);
        inputData[5] = Double.parseDouble(gz);
        inputData[6] = press;
        index =0;
        double total_sum =0;

        for(int i = 0 ; i < 7 ; i++) {
            System.out.print(inputData[i] + " ");
        }
        System.out.println();
        //L1
        for(int i = 0 ; i < 14 ; i++){
            for(int j =0 ; j< 7;j++){
                total_sum +=  inputData[j] * W1[j][i];
            }
            resultData[i] = total_sum + B1[i];
            if( resultData[i] < 0)
                resultData[i] = 0;
            total_sum = 0;
        }
        changeData();
        //L2
        for(int i = 0 ; i < 14 ; i++){
            for(int j =0 ; j< 14;j++){
                total_sum +=  inputData[j]* W2[j][i];
            }
            resultData[i] = total_sum+ B2[i];
            if( resultData[i] < 0)
                resultData[i] = 0;
            total_sum = 0;
        }
        changeData();
        //L3
        for(int i = 0 ; i < 14 ; i++){
            for(int j =0 ; j< 14;j++){
                total_sum +=  inputData[j]* W3[j][i];
            }
            resultData[i] = total_sum+ B3[i];
            if( resultData[i] < 0)
                resultData[i] = 0;
            total_sum = 0;
        }
        changeData();
        //L4
        for(int i = 0 ; i < 14 ; i++){
            for(int j =0 ; j< 14;j++){
                total_sum +=  inputData[j]* W4[j][i];
            }
            resultData[i] = total_sum+ B4[i];
            if( resultData[i] < 0)
                resultData[i] = 0;
            total_sum = 0;
        }
        //hypothesis
        changeData();
        for(int i = 0 ; i < 4 ; i++){
            for(int j =0 ; j< 14;j++){
                total_sum +=  inputData[j]* W5[j][i];
            }
            resultData[i] = total_sum+ B5[i];
            total_sum = 0;
        }
        System.out.print("결과 값: ");

       for(int i =0 ; i < 4 ; i++){
           System.out.print(resultData[i]+ " ");
           if(i == 0){
               index =0;
           }
           else{
                if(resultData[index] < resultData[i])
                    index = i;
            }
        }
        System.out.println();

        return index;


    }

    public double getoutofindex(int x,int y){
        return W4[x][y];
    }

    public void ReLu(int x, int y  ){
        for(int i = 0 ; i < x ; i++){
            for(int j =0 ; j< y ;j++){

            }
        }

    }
}
